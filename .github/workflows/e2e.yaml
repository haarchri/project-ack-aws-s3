name: End to End Testing

on:
  push:
    branches:
      - main
      - release-*
    tags:
      - 'v*'
  pull_request: {}
  workflow_dispatch: {}

permissions:
  id-token: write   # Required for OIDC authentication
  contents: write   # Required for release creation

env:
  # UP_ORG: ${{ secrets.UP_ORG }}
  # UP_API_TOKEN: ${{ secrets.UP_API_TOKEN }}
  UP_DEV_ORG: ${{ secrets.UP_DEV_ORG }}
  UP_DEV_API_TOKEN: ${{ secrets.UP_DEV_API_TOKEN }}
  UP_DEV_ROBOT_ID: ${{ secrets.UP_DEV_ROBOT_ID }}
  AWS_REGION: us-east-1

jobs:
  e2e:
    if: contains(github.event.pull_request.labels.*.name, 'run-e2e-tests')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      # during uxp2 development we need upbound-dev login here
      - name: Install and login with up
        if: env.UP_DEV_API_TOKEN != '' && env.UP_DEV_ORG != ''
        uses: upbound/action-up@v1
        with:
          api-token: ${{ secrets.UP_DEV_API_TOKEN }}
          organization: ${{ secrets.UP_DEV_ORG }}
          channel: main
          version: v0.41.0-0.rc.0.21.g7e317ab8

      # during uxp2 development we need upbound-dev login here
      - name: Login to xpkg with robot
        if: env.UP_DEV_API_TOKEN != '' && env.UP_DEV_ORG != ''
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: xpkg.upbound.io
          username: ${{ env.UP_DEV_ROBOT_ID }}
          password: ${{ env.UP_DEV_API_TOKEN }}

      - name: Build project
        run: up project build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run e2e tests
        if: env.UP_DEV_API_TOKEN != '' && env.UP_DEV_ORG != ''
        env:
          UP_AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          UP_AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          UP_AWS_SESSION_TOKEN: ${{ env.AWS_SESSION_TOKEN }}
        run: up test run tests/* --e2e --local

